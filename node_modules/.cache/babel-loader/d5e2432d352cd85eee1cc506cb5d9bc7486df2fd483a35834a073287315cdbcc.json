{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\mystudy\\\\src\\\\ChatGpt.js\";\nimport React from \"react\";\nimport './ChatGpt.css';\nimport \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\";\nimport { MainContainer, ChatContainer, MessageList, Message, MessageInput, TypingIndicator } from \"@chatscope/chat-ui-kit-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatGpt = () => {\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: /*#__PURE__*/_jsxDEV(ChatContainer, {\n      children: [/*#__PURE__*/_jsxDEV(MessageList, {\n        typingIndicator: typing ? /*#__PURE__*/_jsxDEV(TypingIndicator, {\n          content: \"ChatGPT is typing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 41\n        }, this) : null,\n        children: messages.map((message, i) => {\n          return /*#__PURE__*/_jsxDEV(Message, {\n            model: message\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n        placeholder: \"Type message here\",\n        onSend: handleSend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c = ChatGpt;\nexport default ChatGpt;\nvar _c;\n$RefreshReg$(_c, \"ChatGpt\");","map":{"version":3,"names":["React","MainContainer","ChatContainer","MessageList","Message","MessageInput","TypingIndicator","jsxDEV","_jsxDEV","ChatGpt","children","typingIndicator","typing","content","fileName","_jsxFileName","lineNumber","columnNumber","messages","map","message","i","model","placeholder","onSend","handleSend","_c","$RefreshReg$"],"sources":["D:/react/mystudy/src/ChatGpt.js"],"sourcesContent":["import React from \"react\";\r\nimport './ChatGpt.css';\r\nimport \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\";\r\nimport {MainContainer, ChatContainer, MessageList, Message, MessageInput, TypingIndicator} from \"@chatscope/chat-ui-kit-react\"\r\n\r\n\r\n\r\nconst ChatGpt = () => {\r\n    return(\r\n\r\n        <MainContainer>\r\n          <ChatContainer>\r\n            <MessageList\r\n              typingIndicator={typing ? <TypingIndicator content=\"ChatGPT is typing\" /> : null}>\r\n              {messages.map((message, i) => {\r\n                return <Message key={i} model={message}/>\r\n              })}\r\n            </MessageList>\r\n            <MessageInput placeholder='Type message here' onSend={handleSend}/>\r\n          </ChatContainer>\r\n        </MainContainer>\r\n\r\n    )\r\n}\r\n\r\nexport default ChatGpt;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AACtB,OAAO,2DAA2D;AAClE,SAAQC,aAAa,EAAEC,aAAa,EAAEC,WAAW,EAAEC,OAAO,EAAEC,YAAY,EAAEC,eAAe,QAAO,8BAA8B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAI9H,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAClB,oBAEID,OAAA,CAACP,aAAa;IAAAS,QAAA,eACZF,OAAA,CAACN,aAAa;MAAAQ,QAAA,gBACZF,OAAA,CAACL,WAAW;QACVQ,eAAe,EAAEC,MAAM,gBAAGJ,OAAA,CAACF,eAAe;UAACO,OAAO,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,GAAG,IAAK;QAAAP,QAAA,EAChFQ,QAAQ,CAACC,GAAG,CAAC,CAACC,OAAO,EAAEC,CAAC,KAAK;UAC5B,oBAAOb,OAAA,CAACJ,OAAO;YAASkB,KAAK,EAAEF;UAAQ,GAAlBC,CAAC;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAmB;QAC3C,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACU,eACdT,OAAA,CAACH,YAAY;QAACkB,WAAW,EAAC,mBAAmB;QAACC,MAAM,EAAEC;MAAW;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACrD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAGxB,CAAC;AAAAS,EAAA,GAhBKjB,OAAO;AAkBb,eAAeA,OAAO;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}